name: decoder/windows-sysmon/0

parents:
  - decoder/windows-event/0

metadata:
  description: Decoder for Windows Sysmon events
  module: Windows Sysmon
  title: Decoder for Windows Sysmon
  compatibility: >
    This decoder has been tested on Wazuh version 4.3
  author:
    name: Wazuh, Inc.
    date: 2023/01/23
  references:
    - https://learn.microsoft.com/es-es/sysinternals/downloads/sysmon
  versions: [Vista, "7", "8", "10", "11", Server 2012, Server 2016, Server 2019, Server 2022]

check:
  - windows.System.Provider.@Name: Microsoft-Windows-Sysmon


normalize:
 - map:
    - wazuh.decoders: array_append(windows-sysmon)
    - event.dataset: sysmon
    - event.kind: event

    # Add categorization fields
    - rule.name: $windows.EventData.RuleName
    - event.hash: $windows.EventData.Hash
    - temp.hashes: parse_key_value($windows.EventData.Hashes, =, ',', '\'', '\'')
    - related.hash: $temp.hashes


  ## Process fields
    - process.entity_id: $windows.EventData.ProcessGuid
    - process.pid: $windows.EventData.ProcessId
    - process.executable: $windows.EventData.Image
    - process.entity_id: $windows.EventData.SourceProcessGuid
    - process.entity_id: $windows.EventData.SourceProcessGUID
    - process.pid: $windows.EventData.SourceProcessId
    - process.thread.id: $windows.EventData.SourceThreadId
    - process.executable: $windows.EventData.SourceImage
    - process.executable: $windows.EventData.Destination
    - process.command_line: $windows.EventData.CommandLine
    - process.working_directory: $windows.EventData.CurrentDirectory
    - process.parent.entity_id: $windows.EventData.ParentProcessGuid
    - process.parent.pid: $windows.EventData.ParentProcessId
    - process.parent.executable: $windows.EventData.ParentImage
    - process.parent.command_line: $windows.EventData.ParentCommandLine
    - temp.file_data: parse_file($process.executable)
    - process.name: $temp.file_data.name
    - temp.file_data: parse_file($process.parent.executable)
    - process.parent.name: $temp.file_data.name
    - process.args: split($process.command_line, \ )
    - process.parent.args: split($process.parent.command_line, \ )


  ## File fields
    - file.path: $windows.EventData.TargetFilename
    - file.path: $windows.EventData.Device
    - file.name: $windows.EventData.PipeName
    - file.path: $windows.EventData.ImageLoaded
    - file.code_signature.subject_name: $windows.EventData.Signature
    - file.code_signature.status: $windows.EventData.SignatureStatus
    - temp.file_data: parse_file($file.path)
    - file.directory: $temp.file_data.path
    - file.extension: $temp.file_data.ext
    - file.name: $temp.file_data.name

  ## Network, Destination, and Source fields
    - network.transport: $windows.EventData.Protocol
    - network.protocol: $windows.EventData.DestinationPortName
    - network.protocol: $windows.EventData.SourcePortName
    - source.ip: $windows.EventData.SourceIp
    - source.domain: $windows.EventData.SourceHostname
    - source.port: $windows.EventData.SourcePort
    - destination.ip: $windows.EventData.DestinationIp
    - destination.domain: $windows.EventData.DestinationHostname
    - destination.port: $windows.EventData.DestinationPort
    - dns.question.name: $windows.EventData.QueryName

  ## User fields
    - user.id: $windows.System.Security.@UserID
    - temp.user_parts: split($windows.EventData.User, \\)
    - user.domain: $temp.user_parts.0
    - user.name: $temp.user_parts.1

  ## Related fields
    - related.user: array_append($user.name)
    - related.ip: array_append($windows.EventData.NewTargetUserName)


 - check: $event.code=="255"
   map:
    - error.code: $event.code

 - check: $event.code=="25"
   map:
    - message: $windows.EventData.Type

 - check: string_not_equal($event.code,7)
   map:
   - process.pe.original_file_name: $windows.EventData.OriginalFileName
   - process.pe.company: $windows.EventData.Company
   - process.pe.description: $windows.EventData.Description
   - process.pe.file_version: $windows.EventData.FileVersion
   - process.pe.product: $windows.EventData.Product

 - check: $event.code=="7"
   map:
    - file.pe.original_file_name: $windows.EventData.OriginalFileName
    - file.pe.company: $windows.EventData.Company
    - file.pe.description: $windows.EventData.Description
    - file.pe.file_version: $windows.EventData.FileVersion
    - file.pe.product: $windows.EventData.Product

  # DNS event
 - check: $event.code=="22"
   map:
    - network.protocol: dns

 - check: $windows.EventData.SignatureStatus==Valid
   map:
    - file.code_signature.valid: True

 - check: $windows.EventData.Initiated==True
   map:
    - network.direction: egress

 - check: $windows.EventData.Initiated==false
   map:
    - network.direction: ingress

 - check: $windows.EventData.SourceIsIpv6==true
   map:
    - network.type: ipv6

 - check: $windows.EventData.SourceIsIpv6==false
   map:
    - network.type: ipv4

 - check: $event.code=="1" OR $event.code=="23" OR $event.code=="24" OR $event.code=="25" OR $event.code=="26"
   map:
    - process.hash: $temp.hashes

 - check: $event.code=="6" OR $event.code=="7" OR $event.code=="15"
   map:
    - file.hash: $temp.hashes
    - file.pe.imphash: file.hash.imphash

  ## Registry fields
 - check: $event.code=="12" OR $event.code=="13" OR $event.code=="14"
   map:
    - registry.path: $windows.EventData.TargetObject
    - temp.registry.array: split($registry.path, \\)
    - registry.hive: $temp.registry.array.0
    - temp.registry.array.0: delete()
    - registry.key: join($temp.registry.array, \\)
    - registry.value: regex_extract($registry.path, ^.*\\\\(.*)$)

 - check: ($event.code=="12" OR $event.code=="13" OR $event.code=="14") AND starts_with($windows.Event.EventData.Details,QWORD)
   map:
    - registry.data.type: SZ_QWORD
    - registry.data.strings: regex_extract($windows.EventData.Details, ^QWORD\\s*\\((0x[0-9A-F]+-0x[0-9A-F]+\)\\\))

 - check: ($event.code=="12" OR $event.code=="13" OR $event.code=="14") AND starts_with($windows.EventData.Details,DWORD)
   map:
    - registry.data.type: SZ_DWORD
    - temp.value: regex_extract($windows.EventData.Details, DWORD \\((0x[0-9A-F]{8}\)\\\))
    - registry.data.strings: hex_to_number($temp.value)

 - check:
    - windows.EventData.Details: starts_with(Binary Data)
   map:
    - temp.is_binary_data: true

 - check:  ($event.code=="12" OR $event.code=="13" OR $event.code=="14") AND is_true($temp.is_binary_data)
   map:
    - registry.data.type: REG_BINARY
    - registry.data.strings: $windows.EventData.Details

# Cleanup
 - map:
   - temp: delete()
   - windows: delete()
