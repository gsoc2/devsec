name: decoder/windows-security/0

metadata:
  module: Windows Security
  title: Decoder for Windows security events.
  description: This Windows decoder normalizes Windows security events.
  versions: [Vista, "7", "8", "10", "11", Server 2012, Server 2016, Server 2019, Server 2022]
  compatibility: This decoder has been tested on Wazuh version 4.3.
  author:
    name: Wazuh, Inc.
    date: 2023/01/23
  references:
    - https://learn.microsoft.com/en-us/windows/win32/events/windows-events
    - https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/security-auditing-overview

parents:
  - decoder/windows-event/0

check: >-
  $windows.System.Channel.#text == Security AND
  ($event.provider == Microsoft-Windows-Security-Auditing OR $event.provider == Microsoft-Windows-Eventlog)

normalize:

  # Generic fields
  - map:
      - wazuh.decoders: array_append(windows-security)
      - event.dataset: security
      - event.code: $event.id
      - event: kvdb_get_merge(windows_security_categories, $event.id)
      - windows.logon.id: $windows.EventData.SubjectLogonId

  # Set Logon Type
  - check: exists($windows.EventData.LogonType)
    map:
      - windows.logon.type: kvdb_get(windows_logon_type, $windows.EventData.LogonType)

  # TODO - Set User Account Control (lines 833 to 893)

  # TODO - Set Kerberos Ticket Options (lines 894 to 943)

  # Set Kerberos Encryption Types - windows.EventData.TicketEncryptionTypeDescription
  - check: exists($windows.EventData.TicketEncryptionType)
    map:
      - _kerberos_encryption: kvdb_get(windows_kerberos_encryption, $windows.EventData.TicketEncryptionType)
      - windows.EventData.TicketEncryptionTypeDescription: downcase($_kerberos_encryption)

  # Group: Kerberos Status - Set Kerberos Ticket Status Codes
  - map:
      - _ev_kerberos_status: kvdb_get(windows_events_arrays, kerberos_status)

  - check: array_contains($_ev_kerberos_status, $event.id) AND exists($windows.EventData.Status)
    map:
      - windows.EventData.StatusDescription: kvdb_get(windows_kerberos_status, $windows.EventData.Status)

  # Set Service Name - service.name
  - map:
      - service.name: $windows.EventData.ServiceName

  # Set Service Type - service.type
  - check: exists($windows.EventData.ServiceType)
    map:
      - service.type: kvdb_get(windows_service_type, $windows.EventData.ServiceType)

  # Set Audit Information
  - check: exists($windows.EventData.SubcategoryGuid)
    map:
      - _subcategory_guid: $windows.EventData.SubcategoryGuid
      - _subcategory_guid: replace('{', '')
      - _subcategory_guid: replace('}', '')
      - _subcategory_guid: upcase($_subcategory_guid)
      - _audit_information_array: kvdb_get(windows_audit_information, $_subcategory_guid)
      - windows.EventData.Category: $_audit_information_array[1]
      - windows.EventData.Subcategory: $_audit_information_array[0]

  # Set Logon Failure Reason
  - check: exists($windows.EventData.FailureReason)
    map:
      - _failure_code : $windows.EventData.FailureReason
      - _failure_code : replace('%%', '')
      - windows.logon.failure.reason: kvdb_get(windows_messages, $_failure_code )

  # Set Audit Policy Changes Descriptions
  - check: exists($windows.EventData.AuditPolicyChanges)
    map:
      - _policy_changes: $windows.EventData.AuditPolicyChanges
      - _policy_changes: replace('%%', '')
      - _policy_changes: split($_policy_changes, ',')

  - check: exists($_policy_changes) AND is_not_array($_policy_changes)
    map:
      - windows.EventData.AuditPolicyChangesDescription: kvdb_get(windows_messages, $_policy_changes)

  #- check: exists($_policy_changes) AND is_array($_policy_changes)
  #  map:
  #   - windows.EventData.AuditPolicyChangesDescription: kvdb_get_array(windows_messages, $_policy_changes)
  #
  # TODO: kvdb_get_array() is a function helper that takes an array of keys, queries the database for each key, and
  # returns an array of corresponding values.
  #
  # The implementation of the HF implies the following restrictions:
  # - Displacement: it may be that one or several keys are not obtained (it is not possible to match by position).
  #   You can't fill the values ​​of the key not found with null because it could be a valid value.
  # - Values ​​might not be of the same type (heterogeneous array): filebeat/opensearch constraint

  # Set Access List Descripitions
  - check: exists($windows.EventData.AccessList)
    map:
      - _access_list: $windows.EventData.AccessList
      - _access_list: replace('%%', '')
      - _access_list: split($_access_list, ',')

  - check: exists($_access_list) AND is_not_array($_access_list)
    map:
      - windows.EventData.AccessListDescription: kvdb_get(windows_messages, $_access_list)

  # - check: exists($_access_list) AND is_array($_access_list)
  #   map:
  #     - windows.EventData.AccessListDescription: kvdb_get_array(windows_messages, $_access_list)
  #
  # TODO: kvdb_get_array() is a function helper that takes an array of keys, queries the database for each key, and
  # returns an array of corresponding values.
  #
  # The implementation of the HF implies the following restrictions:
  # - Displacement: it may be that one or several keys are not obtained (it is not possible to match by position).
  #   You can't fill the values ​​of the key not found with null because it could be a valid value.
  # - Values ​​might not be of the same type (heterogeneous array): filebeat/opensearch constraint


  # TODO - Set Access Mask Descriptions (lines 2203 to 2234)

  # Set Failure Status and SubStatus for events 4625 and 4776
  - check: $event.id == '4625' OR $event.id == '4776'
    map:
      - windows.logon.failure.status: $windows.EventData.Status
      - windows.logon.failure.sub_status: $windows.EventData.SubStatus

  # Set Trust Type
  - check: exists($windows.EventData.TdoType)
    map:
      - windows.trustType: kvdb_get(windows_trust_types, $windows.EventData.TdoType)

  # Set Trust Direction
  - check: exists($windows.EventData.TdoDirection)
    map:
      - windows.trustDirection: kvdb_get(windows_trust_directions, $windows.EventData.TdoDirection)

  # Set Trust Attributes
  - check: exists($windows.EventData.TdoAttributes)
    map:
      - windows.trustAttribute: kvdb_get(windows_trust_attributes, $windows.EventData.TdoAttributes)

  # Add Session Events
  - check: $event.id == '4778' OR $event.id == '4779'
    map:
      - user.name: $windows.EventData.AccountName
      - related.user: array_append($windows.EventData.AccountName)
      - user.domain: $windows.EventData.AccountDomain
      - source.ip: $windows.EventData.ClientAddress
      - related.ip: array_append($windows.EventData.ClientAddress)
      - source.domain: $windows.EventData.ClientName
      - logon.id: $windows.EventData.LogonID

  # Group: Target User 1 - Set Event IDs array for Target User 1
  - map:
      - _ev_target_user_1: kvdb_get(windows_events_arrays, target_user_1)

  # Group: Target User 1 - Set Target User Id and Target Sid
  - check: array_contains($_ev_target_user_1, $event.id) AND not_exists($user.id)
    map:
      - user.id: $windows.EventData.TargetUserSid
      - user.id: $windows.EventData.TargetSid

  - check: array_contains($_ev_target_user_1, $event.id) AND exists($user.id)
    map:
      - user.target.id: $windows.EventData.TargetUserSid
      - user.target.id: $windows.EventData.TargetSid

  # Group: Target User 1 - Set Target User Name
  - check: >-
      array_contains($_ev_target_user_1, $event.id) AND not_exists($user.name) AND
      string_not_equal($windows.EventData.TargetUserName, '-')
    map:
      - user.name: $windows.EventData.TargetUserName

  - check: >-
      array_contains($_ev_target_user_1, $event.id) AND exists($user.name) AND
      string_not_equal($windows.EventData.TargetUserName, '-')
    map:
      - user.target.name: $windows.EventData.TargetUserName

  - check: array_contains($_ev_target_user_1, $event.id) AND string_not_equal($windows.EventData.TargetUserName, -)
    map:
      - related.user: array_append($windows.EventData.TargetUserName)

  # Group: Target User 1 - Set Target User Domain
  - check: array_contains($_ev_target_user_1, $event.id) AND not_exists($user.domain)
    map:
      - user.domain: $windows.EventData.TargetDomainName

  - check: array_contains($_ev_target_user_1, $event.id) AND exists($user.domain)
    map:
      - user.target.domain: $windows.EventData.TargetDomainName

  # Group: Member Name - Set Event IDs array for Member Name
  - map:
      - _ev_member_name: kvdb_get(windows_events_arrays, member_name)

  # Group: Member Name - Set Member Name
  - check: array_contains($_ev_member_name, $event.id) AND exists($windows.EventData.MemberName)
    map:
      - _member_name_parts: split($windows.EventData.MemberName, ',')
      - _member_name_parts[0]: replace('CN=', '')
      - user.target.name: $_member_name_parts[0]
      - related.user: array_append($_member_name_parts[0])
      - _member_name_parts[3]: replace('DC=', '')
      - user.target.domain: $_member_name_parts[3]

  # Group: Member Name - Set Target User Sid, Target Sid, Target User Name, and Target Domain Name
  - check: array_contains($_ev_member_name, $event.id) AND not_exists($group.id)
    map:
      - group.id: $windows.EventData.TargetUserSid
      - group.id: $windows.EventData.TargetSid

  - check: array_contains($_ev_member_name, $event.id) AND not_exists($group.name)
    map:
      - group.name: $windows.EventData.TargetUserName

  - check: array_contains($_ev_member_name, $event.id) AND not_exists($group.domain)
    map:
      - _group_domain: $windows.EventData.TargetDomainName
      - _group_domain: replace('DC=', '')
      - group.domain: $_group_domain

  - check: array_contains($_ev_member_name, $event.id) AND exists($user.target)
    map:
      - user.target.group.id: $group.id
      - user.target.group.name: $group.name
      - user.target.group.domain: $group.domain

  # Set Computer Object for events 4741, 4742, and 4743
  - check: $event.id == '4741' OR $event.id == '4742' OR $event.id == '4743'
    map:
      - windows.computerObject.id: $windows.EventData.TargetSid
      - windows.computerObject.name: $windows.EventData.TargetUserName
      - windows.computerObject.domain: $windows.EventData.TargetDomainName

  # Set Logon Id for events 4634, 4647, and 4964
  - check: $event.id == '4634' OR $event.id == '4647' OR $event.id == '4964'
    map:
      - windows.logon.id: $windows.EventData.TargetLogonId

  # Group: Subject User
  - map:
      - _ev_subject_user: kvdb_get(windows_events_arrays, subject_user)

  - check: array_contains($_ev_subject_user, $event.id)
    map:
      - user.id: $windows.EventData.SubjectUserSid
      - user.name: $windows.EventData.SubjectUserName
      - user.domain: $windows.EventData.SubjectDomainName
      - related.user: array_append($windows.EventData.SubjectUserName)

  # Group: Target User 2
  - map:
      - _ev_target_user_2: kvdb_get(windows_events_arrays, target_user_2)

  - check: array_contains($_ev_target_user_2, $event.id)
    map:
      - user.target.id: $windows.EventData.TargetSid

  - check: array_contains($_ev_target_user_2, $event.id) AND string_not_equal($windows.EventData.TargetUserName, '-')
    map:
      - user.target.name: $windows.EventData.TargetUserName
      - related.user: array_append($windows.EventData.TargetUserName)

  - check: array_contains($_ev_target_user_2, $event.id) AND string_not_equal($windows.EventData.TargetDomainName, '-')
    map:
      - user.target.domain: $windows.EventData.TargetDomainName

  # Set Target User for events 4648 and 4688
  - check: $event.id == '4648' OR $event.id == '4688'
    map:
      - user.effective.id: $windows.EventData.TargetUserSid

  - check: ($event.id == '4648' OR $event.id == '4688') AND string_not_equal($windows.EventData.TargetUserName, '-')
    map:
      - user.effective.name: $windows.EventData.TargetUserName
      - related.user: array_append($windows.EventData.TargetUserName)

  - check: ($event.id == '4648' OR $event.id == '4688') AND string_not_equal($windows.EventData.TargetDomainName, '-')
    map:
      - user.effective.domain: $windows.EventData.TargetDomainName

  # Set Subject User for event 1102
  - check: $event.id == '1102'
    map:
      - user.id: $windows.UserData.LogFileCleared.SubjectUserSid.#text
      - user.name: $windows.UserData.LogFileCleared.SubjectUserName.#text
      - related.user: array_append($windows.UserData.LogFileCleared.SubjectUserName.#text)
      - user.domain: $windows.UserData.LogFileCleared.SubjectDomainName.#text
      - windows.logon.id: $windows.UserData.LogFileCleared.SubjectLogonId.#text

  # Group: Auth Fields
  - map:
      - _ev_auth_fields: kvdb_get(windows_events_arrays, auth_fields)

  - check: array_contains($_ev_auth_fields, $event.id)
    map:
      - process.pid: hex_to_number($windows.EventData.ProcessId)
      - process.executable: $windows.EventData.ProcessName
      - source.ip: $windows.EventData.IpAddress
      - source.port: $windows.EventData.IpPort
      - source.domain: $windows.EventData.WorkstationName
      - related.ip: array_append($windows.EventData.ClientAddress)
      - _process_parts: parse_file($windows.EventData.ProcessName)
      - process.name: $_process_parts.name

  # Normalize event 4688
  - check: $event.id == '4688'
    map:
      - process.pid: hex_to_number($windows.EventData.NewProcessId)
      - process.parent.pid: hex_to_number($windows.EventData.ProcessId)
      - process.executable: $windows.EventData.NewProcessName
      - process.parent.executable: $windows.EventData.ParentProcessName
      - _process_parts: parse_file($windows.EventData.NewProcessName)
      - process.name: $_process_parts.name
      - _parent_process_parts: parse_file($windows.EventData.ParentProcessName)
      - process.parent.name: $_parent_process_parts.name
      - process.command_line: $windows.EventData.CommandLine
      - process.args: split($windows.EventData.CommandLine, ' ')

  - check: $event.id == '4688' AND string_not_equal($windows.EventData.TargetUserName, '-')
    map:
      - related.user: array_append($windows.EventData.TargetUserName)

  # Group: Related User 1
  - map:
      - _ev_related_user_1: kvdb_get(windows_events_arrays, related_user_1)

  - check: array_contains($_ev_related_user_1, $event.id) AND string_not_equal($windows.EventData.SubjectUserName, '-')
    map:
      - related.user: array_append($windows.EventData.SubjectUserName)

  # Group: Related User 2
  - map:
      - _ev_related_user_2: kvdb_get(windows_events_arrays, related_user_2)

  - check: array_contains($_ev_related_user_2, $event.id) AND string_not_equal($windows.EventData.TargetUserName, '-')
    map:
      - related.user: array_append($windows.EventData.TargetUserName)

  # Set Old Target User Name
  - check: string_not_equal($windows.EventData.OldTargetUserName, '-')
    map:
      - user.target.name: $windows.EventData.OldTargetUserName
      - related.user: array_append($windows.EventData.OldTargetUserName)

  # Set New Target User Name
  - check: string_not_equal($windows.EventData.NewTargetUserName, '-')
    map:
      - user.changes.name: $windows.EventData.NewTargetUserName
      - related.user: array_append($windows.EventData.NewTargetUserName)

  # TODO - Object Policy Change and SidListDesc (lines 3093 to 3459)

  # Set File fields for events 5140 and 5145
  - check: $event.id == '5140' OR $event.id == '5145'
    map:
      - file.name: $windows.EventData.RelativeTargetName
      - file.directory: $windows.EventData.ShareLocalPath
      - file.path: concat($file.directory, '\\', $file.name)
      - file.target_path: concat($windows.EventData.ShareName, '\\', $file.name)
      - _file_parts: parse_file($file.name)
      - file.extension: $_file_parts.ext