cmake_minimum_required(VERSION 3.12.4)

project(vulnerability_scanner)

enable_testing()

add_definitions(-DPROMISE_TYPE=PromiseType::NORMAL)

if (NOT SRC_FOLDER)
    get_filename_component(SRC_FOLDER     ${CMAKE_SOURCE_DIR}/../../ ABSOLUTE)
endif (NOT SRC_FOLDER)

if (NOT SHARED_MODULES)
    get_filename_component(SHARED_MODULES ${SRC_FOLDER}/shared_modules/ ABSOLUTE)
endif (NOT SHARED_MODULES)

# Include directories
include_directories(include)

include_directories(${SRC_FOLDER})
include_directories(${SRC_FOLDER}/headers)
include_directories(${SRC_FOLDER}/external/cJSON)
include_directories(${SRC_FOLDER}/external/nlohmann)
include_directories(${SRC_FOLDER}/external/rocksdb/include)

include_directories(${SHARED_MODULES}/common)
include_directories(${SHARED_MODULES}/utils)
include_directories(${SHARED_MODULES}/router/include)
include_directories(${SHARED_MODULES}/content_manager/include)
include_directories(${SHARED_MODULES}/indexer_connector/include)

# Link directories
link_directories(${SRC_FOLDER}/external/rocksdb/build)
link_directories(${SHARED_MODULES}/router/build)
link_directories(${SHARED_MODULES}/content_manager/build)
link_directories(${SHARED_MODULES}/indexer_connector/build)

add_subdirectory("src/scanOrchestrator")
add_subdirectory("src/databaseFeedManager")

file(GLOB VULNERABILITY_SCANNER_SRC
    "src/*.cpp"
    )

add_library(vulnerability_scanner SHARED
    ${VULNERABILITY_SCANNER_SRC}
    )

target_link_libraries(vulnerability_scanner scan_orchestrator database_feed router content_manager indexer_connector router gcc_s)

set_target_properties(vulnerability_scanner PROPERTIES
        BUILD_RPATH_USE_ORIGIN TRUE
        BUILD_RPATH "$ORIGIN/../lib"
)

if(UNIT_TEST)
  if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    target_link_libraries(vulnerability_scanner -fprofile-arcs)
  else()
    target_link_libraries(vulnerability_scanner gcov)
  endif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")

  add_subdirectory(tests)
else()
  if(FSANITIZE)
    target_link_libraries(vulnerability_scanner gcov)
  endif(FSANITIZE)
  #add_subdirectory(testtool)
endif(UNIT_TEST)
